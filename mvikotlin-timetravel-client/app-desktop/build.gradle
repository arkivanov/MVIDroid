import org.jetbrains.compose.desktop.application.dsl.TargetFormat

if (!isTargetEnabled(Target.JVM)) {
    return
}

plugins.apply("kotlin-multiplatform")
plugins.apply("org.jetbrains.compose")

kotlin {
    jvm {
        withJava()
    }

    sourceSets {
        jvmMain {
            dependencies {
                implementation project(":mvikotlin")
                implementation project(":mvikotlin-main")
                implementation project(":mvikotlin-timetravel-client:client-internal")
                implementation project(":mvikotlin-timetravel-proto-internal")
                implementation "com.badoo.reaktive:reaktive:$reaktiveVersion"
                implementation "com.badoo.reaktive:coroutines-interop:$reaktiveVersion"
                implementation "com.russhwolf:multiplatform-settings:$multiplatformSettingsVersion"
                implementation compose.desktop.currentOs
                implementation compose.materialIconsExtended
            }
        }
    }
}

compose.desktop {
    application {
        mainClass = "com.arkivanov.mvikotlin.timetravel.client.desktop.MainKt"

        nativeDistributions {
            targetFormats(TargetFormat.Dmg, TargetFormat.Msi, TargetFormat.Deb)
            packageName = "mvikotlin-time-travel-client"
            version = property("mvikotlinVersion") as String

            windows {
                menuGroup = "MVIKotlin"
                upgradeUuid = "B0B34196-90BE-4398-99BE-8E650EBECC78"
            }
        }
    }
}
